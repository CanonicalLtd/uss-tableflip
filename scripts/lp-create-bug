#!/usr/bin/python3
"""Mark the provided launchpad bugs as fix-released.

Update the bug with a comment.
"""

import argparse
import sys
import re
from launchpadlib.launchpad import Launchpad

BUG_IMPORTANCE = ['Low', 'Wishlist', 'Medium', 'High', 'Critical']
BUG_STATUS = ['New', 'Confirmed', 'Triaged', 'In Progress', 'Fix Committed']

def main():
    parser = argparse.ArgumentParser()

    subject_tmpl = "Fixed in {project} version {version}."
    comment_tmpl = (
        "This bug is believed to be fixed in {project} in version "
        "{version}. If this is still a problem for you, please make a "
        "comment and set the state back to New\n\nThank you.")

    parser.add_argument('--title', required=True, action='store',
                        help="Bug title string")
    parser.add_argument('--importance', action='store', default=None,
                        choices=BUG_IMPORTANCE, help="Bug importance value")
    parser.add_argument('--status', action='store', default=None,
                        choices=BUG_STATUS, help="Bug status value")
    parser.add_argument('--description', action='store', required=True,
                        help="Bug description string or @file")
    parser.add_argument('--dry-run', action='store_true', default=False,
                        help='only report what would be done')
    parser.add_argument('project', action='store', default=None,
                        help='The project to use.')

    args = parser.parse_args()

    lp = Launchpad.login_with(
        "uss-tableflip lp-bug-create", 'production', version='devel')

    project_name = args.project
    lp_project = lp.projects(project_name)
    if args.description and args.description.startswith('@'):
        with open(args.description[1:], 'r') as stream:
            description = stream.read()
    else:
        description = args.description
    lp_bug = lp.bugs.createBug(
        description=description, title=args.title, target=lp_project,
        tags=['bitesize'])
    for task in lp_bug.bug_tasks:
        if task.bug_target_name == project_name:
            if args.importance:
                task.importance = args.importance
            if args.status:
                task.status = args.status
            task.lp_save()

if __name__ == '__main__':
    main()
